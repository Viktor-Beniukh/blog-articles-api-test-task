version: "3.9"

services:

  db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - .env.prod

  web:
    build:
      context: .
    volumes:
      - ./:/code
      - ./static:/code/static
      - ./media:/code/media
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate && 
             python manage.py collectstatic --no-input &&
             gunicorn blog_service.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    env_file:
      - .env.prod
    depends_on:
      - db

  nginx:
    build:
      context: ./nginx
    ports:
      - "8000:80"
    volumes:
      - ./static:/code/static
      - ./media:/code/media
    depends_on:
      - web

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A blog_service worker -l INFO"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env.prod

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A blog_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env.prod

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: "python article_telegram_bot/bot.py"
    depends_on:
      - web
      - redis
      - db
    env_file:
      - .env.prod
    restart: on-failure
